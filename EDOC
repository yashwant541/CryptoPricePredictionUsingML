import pandas as pd
import dataiku
import os
import io
import tempfile

# ------------------------------------------------------
# 🔧 Configuration (replace with your Dataiku folder IDs)
# ------------------------------------------------------
input_folder = dataiku.Folder("PwHZQ7jA")       # Folder containing maker_checker_summary.csv
output_folder = dataiku.Folder("pwBGEpop")      # Folder to save success/fail results

# ------------------------------------------------------
# 🧠 Helper Function
# ------------------------------------------------------
def evaluate_maker_checker(df):
    """
    Evaluate maker-checker logic:
    1. For each (Benchmark, Date (in file)) combination
    2. Ensure 4 rows exist for same FileName
    3. Ensure maker (Calculated/Proposed) ≠ checker (Approved/Submitted)
    """
    success_records = []
    fail_records = []

    # Drop fully blank rows
    df = df.dropna(how='all')

    # Clean column names
    df.columns = [c.strip() for c in df.columns]

    # Group by benchmark and date (in file)
    for (benchmark, date_in_file), group in df.groupby(["Benchmark", "Date (in file)"]):
        for file_name, file_grp in group.groupby("FileName"):
            if len(file_grp) < 4:
                fail_records.append(file_grp)
                continue

            maker_users = set(file_grp[file_grp["Status"].isin(["Calculated", "Proposed"])]["USER"].dropna())
            checker_users = set(file_grp[file_grp["Status"].isin(["Approved", "Submitted"])]["USER"].dropna())

            if maker_users and checker_users and not maker_users.intersection(checker_users):
                success_records.append(file_grp)
            else:
                fail_records.append(file_grp)

    df_success = pd.concat(success_records, ignore_index=True) if success_records else pd.DataFrame(columns=df.columns)
    df_fail = pd.concat(fail_records, ignore_index=True) if fail_records else pd.DataFrame(columns=df.columns)

    return df_success, df_fail


# ------------------------------------------------------
# 🚀 Main Execution
# ------------------------------------------------------
def main():
    print("🔍 Reading maker_checker_summary.csv from Dataiku input folder...")

    # Locate the summary file
    files = [f for f in input_folder.list_paths_in_partition() if f.lower().endswith(".csv")]
    if not files:
        raise Exception("❌ No CSV found in MakerChecker summary input folder.")
    summary_path = files[0]

    # Read file
    with input_folder.get_download_stream(summary_path) as stream:
        df_summary = pd.read_csv(stream)

    # Evaluate
    df_success, df_fail = evaluate_maker_checker(df_summary)

    # Save results
    with tempfile.NamedTemporaryFile(mode="w", suffix=".csv", delete=False, newline='', encoding="utf-8") as success_tmp:
        df_success.to_csv(success_tmp.name, index=False)
        with open(success_tmp.name, "rb") as f:
            output_folder.upload_stream("MakerChecker_Success.csv", f)

    with tempfile.NamedTemporaryFile(mode="w", suffix=".csv", delete=False, newline='', encoding="utf-8") as fail_tmp:
        df_fail.to_csv(fail_tmp.name, index=False)
        with open(fail_tmp.name, "rb") as f:
            output_folder.upload_stream("MakerChecker_Fails.csv", f)

    print(f"✅ Evaluation complete: {len(df_success)} success rows, {len(df_fail)} fail rows.")


# ------------------------------------------------------
# Entry point
# ------------------------------------------------------
if __name__ == "__main__":
    main()
