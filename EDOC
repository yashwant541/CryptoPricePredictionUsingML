import pandas as pd
import dataiku
import tempfile
import os

# ------------------------------------------------------
# üîß Configuration (replace with your Dataiku folder IDs)
# ------------------------------------------------------
input_folder = dataiku.Folder("pwBGEpop")      # Folder containing MakerChecker_Success.csv
output_folder = dataiku.Folder("pwBGEpop")     # Folder to save consolidated output

# ------------------------------------------------------
# üß† Helper Function
# ------------------------------------------------------
def consolidate_maker_checker(df):
    """
    Consolidate maker-checker info:
    - Maker = user with Calculated/Proposed status
    - Checker = user with Approved/Submitted status
    - Each row per FileName + Benchmark + Date combination
    - Status times separated into columns
    """
    pivot_df = df.pivot_table(
        index=["FileName", "FileDate", "Benchmark", "Date (in file)"],
        columns="Status",
        values=["USER", "Status Time"],
        aggfunc='first'
    )

    pivot_df.columns = [f"{col[0]} {col[1]}".strip() for col in pivot_df.columns.values]
    pivot_df = pivot_df.reset_index()

    pivot_df['Maker'] = pivot_df['USER Calculated'].combine_first(pivot_df['USER Proposed'])
    pivot_df['Checker'] = pivot_df['USER Approved'].combine_first(pivot_df['USER Submitted'])

    pivot_df = pivot_df.rename(columns={
        'Status Time Calculated': 'Calculated Status Time',
        'Status Time Proposed': 'Proposed Status Time',
        'Status Time Approved': 'Approved Status Time',
        'Status Time Submitted': 'Submitted Status Time'
    })

    pivot_df['USER'] = ""  # Blank as in your example

    # Drop individual USER columns
    pivot_df = pivot_df.drop(columns=['USER Calculated', 'USER Proposed', 'USER Approved', 'USER Submitted'])

    # Reorder columns
    cols = [
        'FileName', 'FileDate', 'USER', 'Benchmark', 'Date (in file)',
        'Maker', 'Checker',
        'Calculated Status Time', 'Proposed Status Time', 'Approved Status Time', 'Submitted Status Time'
    ]
    pivot_df = pivot_df[cols]

    return pivot_df

# ------------------------------------------------------
# üöÄ Main Execution
# ------------------------------------------------------
def main():
    print("üîç Reading MakerChecker_Success.csv from Dataiku input folder...")

    files = [f for f in input_folder.list_paths_in_partition() if "MakerChecker_Success" in f]
    if not files:
        raise Exception("‚ùå MakerChecker_Success.csv not found in input folder.")
    success_path = files[0]

    with input_folder.get_download_stream(success_path) as stream:
        df_success = pd.read_csv(stream)

    df_consolidated = consolidate_maker_checker(df_success)

    # Save consolidated output
    with tempfile.NamedTemporaryFile(mode="w", suffix=".csv", delete=False, newline='', encoding="utf-8") as tmp_file:
        df_consolidated.to_csv(tmp_file.name, index=False)
        with open(tmp_file.name, "rb") as f:
            output_folder.upload_stream("MakerChecker_Success_Consolidated.csv", f)
        os.remove(tmp_file.name)

    print(f"‚úÖ Consolidation complete: {len(df_consolidated)} rows created.")

# ------------------------------------------------------
if __name__ == "__main__":
    main()
