import pandas as pd

# Sample data for final_df with some blanks
data = {
    'Name': ['Bush, George', 'Clinton, Bill', 'Putin, Vladimir', 'Ping, Su', 'Abe, Shinzo', ''],
    'Pass': [1234, 8546, 5734, 5935, 9354, ''],
    'Id': [2, 2, 3, 3, 4, 4]  # Example with Id 4 having a blank entry
}

# Create the final_df DataFrame
final_df = pd.DataFrame(data)

# Group by 'Id' and collect non-empty 'Name' and 'Pass' values in lists
grouped = final_df.groupby('Id').agg({
    'Name': lambda x: [f"'{name}'" for name in x if name],  # Filter out empty names
    'Pass': lambda x: [f"'{pass_}'" for pass_ in x if pass_]  # Filter out empty passes
}).reset_index()

# Create a mapping from 'Id' to aggregated Name_Group and Pass_Group
name_pass_map = dict(zip(grouped['Id'], zip(grouped['Name'], grouped['Pass'])))

# Map the Name_Group and Pass_Group back to the original DataFrame based on 'Id'
final_df['Name_Group'] = final_df['Id'].map(lambda x: name_pass_map.get(x, ([], []))[0])
final_df['Pass_Group'] = final_df['Id'].map(lambda x: name_pass_map.get(x, ([], []))[1])

# Show the final result
print(final_df)
