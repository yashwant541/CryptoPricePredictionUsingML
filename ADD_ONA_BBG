import dataiku
import extract_msg
import os
import io

# ----------------------------------------------------------
# ✅ Configuration
# ----------------------------------------------------------
input_folder = dataiku.Folder("O6cNhxMz")   # Input MSG folder
output_folder = dataiku.Folder("UeSjIQkY")  # Output folder for Excel attachments

print("🚀 Starting improved MSG Excel extractor (no timestamp usage)")
print(f"📁 Input folder: {input_folder.get_path()}")
print(f"📁 Output folder: {output_folder.get_path()}")

# ----------------------------------------------------------
# ✅ Helper function — Detect if content is Excel
# ----------------------------------------------------------
def is_excel_file(filename, data_bytes):
    """Detect if a file is likely an Excel file."""
    name_lower = filename.lower() if filename else ""
    if name_lower.endswith(('.xlsx', '.xls', '.xlsm')):
        return True
    # Check magic bytes (Excel = ZIP format)
    return data_bytes[:4] == b'PK\x03\x04'

# ----------------------------------------------------------
# ✅ Process all MSG files
# ----------------------------------------------------------
msg_files = [f for f in input_folder.list_paths_in_partition() if f.lower().endswith(".msg")]
print(f"📬 Found {len(msg_files)} MSG file(s) to process.\n")

for msg_path in msg_files:
    msg_name = os.path.basename(msg_path)
    print(f"📩 Processing: {msg_name}")

    try:
        # Read raw .msg file
        raw_bytes = input_folder.get_download_stream(msg_path).read()

        # Parse message (without touching any timestamp)
        msg = extract_msg.Message(io.BytesIO(raw_bytes))

        if not msg.attachments:
            print("⚠️  No attachments found.\n")
            continue

        print(f"📎 Found {len(msg.attachments)} attachment(s):")
        excel_found = 0

        for i, att in enumerate(msg.attachments, start=1):
            filename = att.longFilename or att.shortFilename or f"attachment_{i}.bin"
            data = att.data

            if is_excel_file(filename, data):
                excel_found += 1
                safe_name = filename
                if not safe_name.lower().endswith(".xlsx"):
                    safe_name += ".xlsx"

                output_path = os.path.join(output_folder.get_path(), safe_name)
                with open(output_path, "wb") as f:
                    f.write(data)
                print(f"   ✅ Saved Excel: {safe_name}")
            else:
                print(f"   ❌ Skipped non-Excel: {filename}")

        print(f"✅ Done {msg_name}: {excel_found} Excel saved.\n")

    except Exception as e:
        print(f"❌ Error processing {msg_name}: {e}\n")

print("🎯 Extraction complete (no timestamp usage anywhere).")
