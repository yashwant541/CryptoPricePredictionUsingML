<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Maker-Checker Email Analysis</title>
    <style>
        body { font-family: Arial; padding: 20px; background: #f5f5f5; }
        .container { max-width: 600px; margin:auto; background:#fff; padding:20px; border-radius:8px; }
        input, button { margin-top:10px; padding:8px; }
        #loading { display:none; margin-top:10px; color:#555; }
        pre { background:#eee; padding:10px; overflow-x:auto; }
    </style>
</head>
<body>
    <div class="container">
        <h2>Maker-Checker Email Analysis</h2>
        <input type="file" id="fileInput" accept=".txt"><br>
        <button id="processBtn">Process</button>
        <div id="loading">Processing...</div>
        <div class="result-section">
            <h3>Results:</h3>
            <pre id="resultsContent"></pre>
        </div>
    </div>

    <script>
        const fileInput = document.getElementById('fileInput');
        const processBtn = document.getElementById('processBtn');
        const loading = document.getElementById('loading');
        const resultsContent = document.getElementById('resultsContent');

        processBtn.addEventListener('click', async () => {
            const file = fileInput.files[0];
            if (!file) return alert('Please select a .txt file');

            loading.style.display = 'block';
            resultsContent.textContent = '';

            try {
                const fileData = await readFileAsBase64(file);

                // Call Dataiku Webapp backend
                const response = await fetch('/ajax/do_analyze_emails', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ file_data: fileData, file_name: file.name })
                });

                const result = await response.json();

                if (result.error) {
                    resultsContent.textContent = 'Error: ' + result.error;
                } else {
                    resultsContent.textContent = JSON.stringify(result.results, null, 2);
                }
            } catch (err) {
                resultsContent.textContent = 'Error: ' + err.message;
            } finally {
                loading.style.display = 'none';
            }
        });

        function readFileAsBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = () => resolve(reader.result);
                reader.onerror = error => reject(error);
                reader.readAsDataURL(file);
            });
        }
    </script>
</body>
</html>
