/***************************************************************************/
/* SAS Code for Financial Fraud Detection                                */
/* This example covers SAS basics: data import, exploration, cleaning,     */
/* feature engineering, model building (logistic regression & random forest),*/
/* and evaluation.                                                         */
/***************************************************************************/

/* 1. Set up a library pointing to your data directory */
libname mydata '/path/to/your/data';

/* 2. Import your data (e.g., a CSV file with transaction details) */
proc import datafile='/path/to/your/data/fraud_transactions.csv'
    out=mydata.frauddata
    dbms=csv
    replace;
    guessingrows= max; /* Ensures that SAS checks all rows for data type inference */
run;

/* 3. Explore the data: view first 10 observations and get dataset metadata */
proc print data=mydata.frauddata (obs=10);
    title "First 10 Observations of Fraud Data";
run;

proc contents data=mydata.frauddata;
    title "Dataset Contents";
run;

/* 4. Get summary statistics for key numeric variables */
proc means data=mydata.frauddata n mean std min max;
    var transaction_amount;
    title "Summary Statistics for Transaction Amount";
run;

/* 5. Check for missing values and frequency distributions for key variables */
proc freq data=mydata.frauddata;
    tables isFraud transaction_amount merchant cardholderID / missing;
    title "Frequency Distribution for Selected Variables";
run;

/* 6. Data Cleaning & Feature Engineering */
/* Create a clean dataset with derived variables such as log transaction amount */
/* and extract day-of-week from the transaction date */
data mydata.frauddata_clean;
    set mydata.frauddata;
    
    /* Calculate log of transaction amount if positive */
    if transaction_amount > 0 then 
        log_transaction = log(transaction_amount);
    else 
        log_transaction = .;
    
    /* Convert transaction_date (assumed in 'YYYY-MM-DD' format) to SAS date and extract day of week */
    transaction_date_sas = input(transaction_date, yymmdd10.);
    format transaction_date_sas date9.;
    day_of_week = weekday(transaction_date_sas);
    
    /* Create a binary indicator for high-value transactions */
    if transaction_amount > 1000 then 
        high_amount = 1;
    else 
        high_amount = 0;
run;

/* 7. Split the data into Training (70%) and Testing (30%) datasets */
proc surveyselect data=mydata.frauddata_clean 
                  out=train_test_split
                  seed=12345 
                  samprate=0.7 
                  outall;
run;

data training testing;
    set train_test_split;
    if selected then output training;
    else output testing;
run;

/* 8. Build a Logistic Regression Model for Fraud Detection */
/* The model predicts the binary outcome "isFraud" using transaction variables */
proc logistic data=training;
    class merchant cardholderID day_of_week high_amount (param=ref);
    model isFraud(event='1') = transaction_amount log_transaction day_of_week high_amount
          / selection=stepwise slentry=0.05 slstay=0.05;
    title "Stepwise Logistic Regression Model for Fraud Detection";
    /* Score the model on the test dataset and output predictions */
    score data=testing out=scored;
run;

/* 9. Evaluate Model Performance */
/* Re-run the logistic procedure to produce an ROC curve */
proc logistic data=training plots(only)=roc;
    class merchant cardholderID day_of_week high_amount (param=ref);
    model isFraud(event='1') = transaction_amount log_transaction day_of_week high_amount;
    score data=testing out=scored;
    title "Model Evaluation: ROC Curve for Fraud Detection Model";
run;

/* 10. Optional: Build a Random Forest Model using PROC HPFOREST for comparison */
/* This procedure is part of SAS High-Performance procedures */
proc hpforest data=training;
    target isFraud / level=binary;
    input transaction_amount log_transaction day_of_week high_amount;
    ods output VariableImportance=VarImp;
    title "Random Forest Model for Fraud Detection";
run;

/* Display Variable Importance from the Random Forest model */
proc print data=VarImp;
    title "Variable Importance from Random Forest Model";
run;

/* End of SAS Code */
