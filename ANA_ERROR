def extract_contact_info(json_str):
    try:
        if not isinstance(json_str, str):
            # If the value is not a string, return an empty DataFrame
            return pd.DataFrame(columns=['Name', 'Title'])
        
        # Replace single quotes with double quotes and ensure valid JSON
        json_str = json_str.replace("'", '"')
        
        # Parse the JSON string
        data = json.loads(json_str)
        results = data.get('results', [])
        
        # Check if results is a list of dictionaries
        if isinstance(results, list) and all(isinstance(item, dict) for item in results):
            contact_df = pd.json_normalize(results)
            return contact_df[['Name', 'Title']]
        else:
            # Return an empty DataFrame if the structure is unexpected
            return pd.DataFrame(columns=['Name', 'Title'])
    except (json.JSONDecodeError, KeyError, TypeError) as e:
        # Handle JSON parsing errors, missing keys, or invalid types
        return pd.DataFrame(columns=['Name', 'Title'])
