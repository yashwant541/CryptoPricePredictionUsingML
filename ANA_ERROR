def extract_contact_info(json_str):
    # Check if the input is a string; if not, return an empty DataFrame
    if not isinstance(json_str, str):
        return pd.DataFrame(columns=['Name', 'Title'])
    
    try:
        # Preprocess the JSON string to handle common issues
        json_str = json_str.replace("'", '"')  # Replace single quotes with double quotes
        json_str = re.sub(r',\s*(}|\])', r'\1', json_str)  # Remove trailing commas before braces/brackets
        
        # Parse the JSON string
        data = json.loads(json_str)
        results = data.get('results', [])
        
        # Check if 'results' is a list of dictionaries
        if isinstance(results, list) and all(isinstance(item, dict) for item in results):
            contact_df = pd.json_normalize(results)
            return contact_df[['Name', 'Title']]
        else:
            # Return an empty DataFrame for unexpected structures
            return pd.DataFrame(columns=['Name', 'Title'])
    except (json.JSONDecodeError, KeyError, TypeError) as e:
        # Return an empty DataFrame in case of errors
        return pd.DataFrame(columns=['Name', 'Title'])
