from reportlab.lib.pagesizes import A4
from reportlab.lib import colors
from reportlab.lib.units import inch
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
import pandas as pd

# File Paths
input_file = 'input_data.csv'  # Change this to your file path
pdf_file = 'dynamic_report.pdf'

# Read the file (supports both CSV and Excel)
if input_file.endswith('.csv'):
    df = pd.read_csv(input_file)
elif input_file.endswith('.xlsx'):
    df = pd.read_excel(input_file)

# Convert Date column if exists and sort by latest date
date_column = None
for col in df.columns:
    if 'date' in col.lower():  # Find any column with "date" in its name
        date_column = col
        df[date_column] = pd.to_datetime(df[date_column], errors='coerce')
        df = df.sort_values(by=date_column, ascending=False).reset_index(drop=True)
        break

# Create PDF report
doc = SimpleDocTemplate(pdf_file, pagesize=A4, rightMargin=72, leftMargin=72, topMargin=72, bottomMargin=18)

# Styling with Times-Roman (default font)
styles = getSampleStyleSheet()
title_style = ParagraphStyle(
    'TitleStyle',
    fontName='Times-Roman',
    fontSize=18,
    textColor=colors.HexColor("#4B8BBE"),
    spaceAfter=10,
    leading=22,
)
section_style = ParagraphStyle(
    'SectionStyle',
    fontName='Times-Roman',
    fontSize=12,
    leading=16,
    textColor=colors.black,
)
header_style = ParagraphStyle(
    'HeaderStyle',
    fontName='Times-Roman',
    fontSize=24,
    textColor=colors.HexColor("#306998"),
    alignment=1,
    spaceAfter=20,
)

# Collect paragraphs to add to PDF
story = []

# Add header
story.append(Paragraph("Data Summary Report", header_style))
story.append(Spacer(1, 0.2 * inch))

# Loop through each row and generate dynamic content
for idx, row in df.iterrows():
    # Section header with a light background color
    title_text = row[df.columns[0]] if len(df.columns) > 0 else "No Title"  # Use first column as section header
    title_table = Table(
        [[f"Record {idx + 1}: {title_text}"]],
        colWidths=[450],
        style=[('BACKGROUND', (0, 0), (-1, -1), colors.HexColor("#FFD43B")),
               ('TEXTCOLOR', (0, 0), (-1, -1), colors.black),
               ('FONTNAME', (0, 0), (-1, -1), 'Times-Roman'),
               ('FONTSIZE', (0, 0), (-1, -1), 14),
               ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
               ('LEFTPADDING', (0, 0), (-1, -1), 8),
               ('RIGHTPADDING', (0, 0), (-1, -1), 8),
               ('BOTTOMPADDING', (0, 0), (-1, -1), 6),
              ]
    )
    story.append(title_table)
    story.append(Spacer(1, 0.15 * inch))

    # Add each column dynamically
    for col in df.columns:
        if pd.notna(row[col]):
            # Format date if it's a date column
            if col == date_column:
                formatted_date = row[col].strftime('%d-%m-%Y') if pd.notnull(row[col]) else 'N/A'
                story.append(Paragraph(f"<b>{col}:</b> {formatted_date}", section_style))
            else:
                story.append(Paragraph(f"<b>{col}:</b> {row[col]}", section_style))

    # Spacer between entries
    story.append(Spacer(1, 0.2 * inch))

# Build PDF
doc.build(story)

print(f"Dynamic PDF report created: {pdf_file}")
