import dataiku
import extract_msg
import re
import io
from datetime import datetime

# -------------------------------
# ðŸ”§ Configuration: Dataiku folders
# -------------------------------
input_folder = dataiku.Folder("INPUT_FOLDER_ID")   # Replace with your input folder ID
output_folder = dataiku.Folder("OUTPUT_FOLDER_ID") # Replace with your output folder ID

# Regex to match dates:
# 1) Optional ordinal dates: 16th June 2025, 2nd July 2024, 23-Sep-2024
# 2) 6-digit numeric dates: 230924 (ddmmyy)
date_pattern = re.compile(
    r'(\d{1,2}(?:st|nd|rd|th)?[- ]?[A-Za-z]{3,9}[- ]\d{4}|\b\d{6}\b)',
    re.IGNORECASE
)

# Function to normalize date string
def normalize_date(date_str):
    # Check if it's a 6-digit number
    if re.fullmatch(r'\d{6}', date_str):
        # Convert ddmmyy -> dd-Mmm-yyyy
        dt = datetime.strptime(date_str, "%d%m%y")
        return dt.strftime("%d-%b-%Y")
    else:
        # Remove ordinal suffix and replace spaces with hyphens
        date_str = re.sub(r'(st|nd|rd|th)', '', date_str, flags=re.IGNORECASE)
        date_str = date_str.replace(' ', '-')
        return date_str

# List all files in the Dataiku input folder
for file_info in input_folder.list_paths_in_partition():
    if file_info.lower().endswith(".msg"):
        try:
            # Read the file into a seekable BytesIO object
            with input_folder.get_download_stream(file_info) as f:
                file_bytes = io.BytesIO(f.read())

            msg = extract_msg.Message(file_bytes)
            
            # Extract date from filename
            match = date_pattern.search(file_info)
            file_date = normalize_date(match.group(0)) if match else "UnknownDate"
            
            for att in msg.attachments:
                att_name = getattr(att, 'longFilename', None) or getattr(att, 'shortFilename', None) or att.filename
                # Only PDFs
                if att_name and att_name.lower().endswith(".pdf"):
                    # Construct save name
                    save_name = f"{file_date}_{att_name}"
                    
                    # Save to Dataiku output folder
                    with output_folder.get_writer(save_name) as out_f:
                        out_f.write(att.data)
                    
                    print(f"Saved PDF {save_name} from {file_info}")
                    
        except Exception as e:
            print(f"Failed to process {file_info}: {e}")
