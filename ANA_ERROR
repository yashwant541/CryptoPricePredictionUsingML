WITH RankedCustomers AS (
    -- 1Ô∏è‚É£ Rank customers within each country based on total spending
    SELECT 
        CustomerID,
        Country,
        SUM(TotalAmount) AS TotalSpent,
        RANK() OVER (PARTITION BY Country ORDER BY SUM(TotalAmount) DESC) AS RankBySpending
    FROM Orders
    GROUP BY CustomerID, Country
),

RunningTotal AS (
    -- 2Ô∏è‚É£ Running total of spending per customer
    SELECT 
        CustomerID,
        OrderID,
        OrderDate,
        TotalAmount,
        SUM(TotalAmount) OVER (PARTITION BY CustomerID ORDER BY OrderDate) AS RunningTotal
    FROM Orders
),

OrderHistory AS (
    -- 3Ô∏è‚É£ Previous order amount and days since last order
    SELECT 
        CustomerID,
        OrderID,
        OrderDate,
        TotalAmount,
        LAG(TotalAmount) OVER (PARTITION BY CustomerID ORDER BY OrderDate) AS PreviousOrderAmount,
        OrderDate - LAG(OrderDate) OVER (PARTITION BY CustomerID ORDER BY OrderDate) AS DaysSinceLastOrder
    FROM Orders
),

CustomerStats AS (
    -- 4Ô∏è‚É£ First and last order values for each customer
    SELECT 
        CustomerID,
        OrderID,
        OrderDate,
        TotalAmount,
        FIRST_VALUE(TotalAmount) OVER (PARTITION BY CustomerID ORDER BY OrderDate) AS FirstPurchase,
        LAST_VALUE(TotalAmount) OVER (PARTITION BY CustomerID ORDER BY OrderDate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS LastPurchase
    FROM Orders
),

SpendingQuartiles AS (
    -- 5Ô∏è‚É£ Divide customers into spending quartiles
    SELECT 
        CustomerID,
        SUM(TotalAmount) AS TotalSpent,
        NTILE(4) OVER (ORDER BY SUM(TotalAmount) DESC) AS SpendingQuartile
    FROM Orders
    GROUP BY CustomerID
),

SalesPercentage AS (
    -- 6Ô∏è‚É£ Calculate % contribution of each order to total sales in that country
    SELECT 
        OrderID,
        CustomerID,
        Country,
        TotalAmount,
        TotalAmount * 100.0 / SUM(TotalAmount) OVER (PARTITION BY Country) AS OrderSalesPercentage
    FROM Orders
)

-- üîπ Final Combined Output
SELECT 
    r.CustomerID,
    r.Country,
    r.TotalSpent,
    r.RankBySpending,
    rt.OrderID,
    rt.OrderDate,
    rt.TotalAmount,
    rt.RunningTotal,
    oh.PreviousOrderAmount,
    oh.DaysSinceLastOrder,
    cs.FirstPurchase,
    cs.LastPurchase,
    sq.SpendingQuartile,
    sp.OrderSalesPercentage
FROM RankedCustomers r
JOIN RunningTotal rt ON r.CustomerID = rt.CustomerID
JOIN OrderHistory oh ON r.CustomerID = oh.CustomerID AND rt.OrderID = oh.OrderID
JOIN CustomerStats cs ON r.CustomerID = cs.CustomerID AND rt.OrderID = cs.OrderID
JOIN SpendingQuartiles sq ON r.CustomerID = sq.CustomerID
JOIN SalesPercentage sp ON rt.OrderID = sp.OrderID
ORDER BY r.Country, r.RankBySpending, rt.OrderDate;
