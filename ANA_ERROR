import pandas as pd
import dataiku
import tempfile
import os
from datetime import datetime

# ------------------------------------------------------
# üîß Configuration ‚Äî Replace with your Dataiku folder IDs
# ------------------------------------------------------
input_folder = dataiku.Folder("XXXXXXXX")      # üì• Input folder
output_folder = dataiku.Folder("YYYYYYYY")     # üì§ Output folder

# List of sheet names to skip
EXCEPTION_SHEETS = ["Tracking Sheet", "FXO VOLS FBIL Realtime", "FXO VOLS Refinitiv Realtime"]

# ------------------------------------------------------
# üß† Helper Functions
# ------------------------------------------------------
def read_excel_safe(file_path):
    """Safely open Excel files with openpyxl engine"""
    return pd.ExcelFile(file_path, engine="openpyxl")

def clean_excel_sheet(df):
    """Clean merged-style Excel data: forward fill and trim"""
    if df.empty:
        return df
    df.dropna(how="all", inplace=True)
    for col in ["Period", "Approval Date", "Benchmark(s)"]:
        if col in df.columns:
            df[col] = df[col].ffill()
    df = df.applymap(lambda x: x.strip() if isinstance(x, str) else x)
    return df

# ------------------------------------------------------
# üöÄ Main Execution
# ------------------------------------------------------
def main():
    input_files = input_folder.list_paths_in_partition()
    if not input_files:
        raise FileNotFoundError("‚ùå No files found in input folder!")

    for excel_file_info in input_files:
        file_name = os.path.basename(excel_file_info)
        base_name, ext = os.path.splitext(file_name)

        if not ext.lower().endswith(("xlsx", "xls")):
            print(f"‚è© Skipping non-Excel file: {file_name}")
            continue

        print(f"\nüìò Processing Excel file: {file_name}")

        # Download Excel to temporary location
        with input_folder.get_download_stream(excel_file_info) as stream:
            with tempfile.NamedTemporaryFile(delete=False, suffix=".xlsx") as tmp:
                tmp.write(stream.read())
                tmp_path = tmp.name

        # Read workbook
        xls = read_excel_safe(tmp_path)

        for sheet_name in xls.sheet_names:
            if sheet_name in EXCEPTION_SHEETS:
                print(f"‚è© Skipping sheet '{sheet_name}' (exception list)")
                continue

            try:
                df = pd.read_excel(tmp_path, sheet_name=sheet_name, engine="openpyxl")
                cleaned_df = clean_excel_sheet(df)

                if cleaned_df.empty:
                    print(f"‚ö†Ô∏è Sheet '{sheet_name}' is empty ‚Äî skipped.")
                    continue

                # Build safe filename: filename_sheetname.csv
                safe_sheet = "".join(c if c.isalnum() else "_" for c in sheet_name)
                output_filename = f"{base_name}_{safe_sheet}.csv"

                # Write cleaned data to a temp CSV, then upload to Dataiku
                with tempfile.NamedTemporaryFile(mode="w", suffix=".csv", delete=False, newline="", encoding="utf-8-sig") as tmp_file:
                    cleaned_df.to_csv(tmp_file.name, index=False)
                    with open(tmp_file.name, "rb") as f:
                        output_folder.upload_stream(output_filename, f, overwrite=True)
                    os.remove(tmp_file.name)

                print(f"‚úÖ Saved: {output_filename}")

            except Exception as e:
                print(f"‚ùå Error reading sheet '{sheet_name}' in {file_name}: {e}")

        os.remove(tmp_path)
        print(f"üèÅ Completed processing: {file_name}")

    print("\nüìÅ Output folder contents:")
    for f in output_folder.list_paths_in_partition():
        print(f" - {f}")

    print("\nüéâ All Excel sheets exported successfully as CSV!")

# ------------------------------------------------------
if __name__ == "__main__":
    main()
