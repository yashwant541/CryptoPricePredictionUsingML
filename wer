def save_final_processed_files(user_parameters: dict, df_clean: pd.DataFrame, df_excluded: pd.DataFrame, file_name: str,
                               file_number: int, log: dict, keywords_match_summary: pd.Series,
                               exclusions_summary: pd.Series, same_keywords_summary: pd.DataFrame) -> None:
    """
    Save the different output files (lines to investigate, clean chat log, excluded lines, log, and summary table).
    Args:
        user_parameters (): user parameters.
        df_clean (): chat log after data cleaning.
        df_excluded (): excluded chat log lines (following data cleaning).
        file_name (): name of the chat log.
        file_number (): file number in the file processing.
        log (): script log.
        keywords_match_summary (): summary table on keywords in lexicon found in the chat log.
        exclusions_summary (): summary table about excluded lines.
        same_keywords_summary (): summary table about same keywords.

    Returns:
        None
    """
    # location where to save output files
    file_path = os.path.join(user_parameters['output_path'], str(file_number))

    # for each chat file, create a new folder (file names are too long to be used as folder names)
    try:
        os.mkdir(file_path)
    except FileExistsError:  # if folder already exists
        pass

    # save excluded lines
    df_excluded.to_excel(f"{file_path}//{file_name}-EXCLUDED.xlsx")

    # save clean filtered df
    df_clean.to_excel(f"{file_path}//{file_name}-CLEAN.xlsx")

    # save exceptions to investigate (flagged by case number, ignore all the cleaning columns for clarity)
    m = ~df_clean['GIA_group_case'].isnull()
    df_clean.loc[m, [col for col in df_clean.columns if "excl_" not in col]].to_excel(
        f"{file_path}//{file_name}-TO_INVESTIGATE.xlsx")

    # save log, keywords_match_summary, exclusions_summary, and same_keywords_summary into a single Excel file
    with pd.ExcelWriter(f"{file_path}//{file_name}-SUMMARY.xlsx") as writer:
        pd.DataFrame.from_dict(log, orient='index', columns=['File_Name']).reset_index().to_excel(writer,
                                                                                                  sheet_name='Log',
                                                                                                  index=False)
        keywords_match_summary.to_excel(writer, header=['Keywords_match'], sheet_name='Keywords_summary')
        exclusions_summary.to_excel(writer, header=['Exclusion_rules'], sheet_name='Exclusions_summary')
        same_keywords_summary.to_excel(writer, header=['Same_keywords'], sheet_name='Same_Keywords_summary')
