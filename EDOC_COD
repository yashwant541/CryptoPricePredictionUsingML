import dataiku
import zipfile
import pandas as pd
import io
import os

# --- Input / Output Folder Handles ---
input_folder = dataiku.Folder("Tw4EvbUb")     # üîπ Replace with your input folder ID
output_folder = dataiku.Folder("pwBGEpop")    # üîπ Replace with your output folder ID

# --- Get list of ZIP files in the input folder ---
input_files = input_folder.list_paths_in_partition()

for file_path in input_files:
    if not file_path.lower().endswith(".zip"):
        continue  # skip non-zip files

    print(f"Processing ZIP file: {file_path}")
    zip_bytes = io.BytesIO(input_folder.get_download_stream(file_path).read())

    try:
        with zipfile.ZipFile(zip_bytes, 'r') as z:
            # List files inside the ZIP
            excel_files = [name for name in z.namelist() if name.endswith(('.xlsx', '.xls'))]

            if len(excel_files) == 0:
                print(f"No Excel file found inside {file_path}. Skipping.")
                continue
            elif len(excel_files) > 1:
                print(f"Multiple Excel files found in {file_path}. Taking the first one.")

            excel_name = excel_files[0]

            # Read the Excel file directly from the ZIP (in memory)
            with z.open(excel_name) as excel_file:
                df = pd.read_excel(excel_file, engine='openpyxl')

            # Prepare output file name (same as Excel file name)
            base_name = os.path.basename(excel_name)
            output_path = os.path.join(output_folder.get_path(), base_name)

            # Save to output folder
            output_stream = output_folder.get_writer(base_name)
            with output_stream as f:
                df.to_excel(f, index=False, engine='openpyxl')

            print(f"‚úÖ Saved extracted Excel: {base_name}")

    except zipfile.BadZipFile:
        print(f"‚ùå Error: {file_path} is not a valid ZIP file.")
    except Exception as e:
        print(f"‚ö†Ô∏è Failed to process {file_path}: {e}")
