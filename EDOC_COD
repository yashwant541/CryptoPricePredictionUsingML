import dataiku
import zipfile
import os
import tempfile
from dataiku.core.dataset import Dataset

def process_zip_files():
    # Configure your folders
    input_folder = dataiku.Folder("YOUR_INPUT_FOLDER_ID")
    output_folder = dataiku.Folder("YOUR_OUTPUT_FOLDER_ID")
    
    # Get all zip files
    zip_files = [f for f in input_folder.list_paths_in_partition() if f.lower().endswith('.zip')]
    
    processed_files = []
    
    for zip_path in zip_files:
        try:
            print(f"Processing {zip_path}...")
            
            # Download zip to temporary file
            with input_folder.get_download_stream(zip_path) as stream:
                with tempfile.NamedTemporaryFile(delete=False, suffix='.zip') as tmp_file:
                    tmp_file.write(stream.read())
                    temp_zip_path = tmp_file.name
            
            # Extract zip
            with zipfile.ZipFile(temp_zip_path, 'r') as zip_ref:
                # Find Excel files
                excel_files = [f for f in zip_ref.namelist() 
                             if f.lower().endswith(('.xlsx', '.xls', '.xlsm'))]
                
                for excel_file in excel_files:
                    # Extract and save Excel file
                    with zip_ref.open(excel_file) as excel_stream:
                        # Use original filename
                        filename = os.path.basename(excel_file)
                        output_path = filename
                        
                        # Handle duplicate filenames
                        counter = 1
                        while output_path in processed_files:
                            name, ext = os.path.splitext(filename)
                            output_path = f"{name}_{counter}{ext}"
                            counter += 1
                        
                        with output_folder.get_writer(output_path) as output_writer:
                            output_writer.write(excel_stream.read())
                        
                        processed_files.append(output_path)
                        print(f"  Extracted: {output_path}")
            
            print(f"✓ Completed: {zip_path}")
            
        except Exception as e:
            print(f"✗ Error processing {zip_path}: {str(e)}")
        
        finally:
            # Clean up
            if 'temp_zip_path' in locals() and os.path.exists(temp_zip_path):
                os.unlink(temp_zip_path)
    
    print(f"\nProcessing complete. Extracted {len(processed_files)} Excel files.")

# Run the function
process_zip_files()
